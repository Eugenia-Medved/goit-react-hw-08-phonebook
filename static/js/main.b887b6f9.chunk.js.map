{"version":3,"sources":["redux/contacts/contacts-action.js","redux/store.js","components/Navigation/Navigation.js","components/UserMenu/default-avatar.jpg","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","components/App/App.js","reportWebVitals.js","index.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/auth/auth-reducer.js","redux/contacts/contacts-reducer.js","redux/auth/auth-actions.js"],"names":["addContactsRequest","createAction","addContactsSuccess","addContactsError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","clearError","changeFilter","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactsReducer","devTools","process","storWithPersist","persistor","persistStore","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","connect","state","isAuthenticated","authSelectors","getIsAuthenticated","to","exact","style","activeStyle","container","alignItems","avatar","marginRight","name","mapDispatchToProps","onLogout","authOperations","logOut","getUsername","defaultAvatar","Avatar","alt","src","Button","variant","onClick","AuthNav","header","justifyContent","borderBottom","Component","component","redirectTo","routeProps","render","props","restricted","HomePage","lazy","RegisterPage","LoginPage","PhoneBookPage","App","this","onGetCurrentUser","fallback","type","height","width","path","getCurrentUser","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","loading","position","document","getElementById","axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","a","authActions","registerRequest","post","response","data","registerSuccess","registerError","message","logoutRequest","logoutSuccess","logoutError","logIn","loginRequest","loginSuccess","loginError","getState","persistedToken","console","log","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","user","initialUserState","email","createReducer","_","payload","setError","error","combineReducers","action","filter","id","authAction"],"mappings":"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","file":"static/js/main.b887b6f9.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const addContactsRequest = createAction('contacts/addContactsRequest');\nexport const addContactsSuccess = createAction('contacts/addContactsSuccess');\nexport const addContactsError = createAction('contacts/addContactsError');\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const deleteContactsRequest = createAction(\n  'contacts/deleteContactsRequest',\n);\nexport const deleteContactsSuccess = createAction(\n  'contacts/deleteContactsSuccess',\n);\nexport const deleteContactsError = createAction('contacts/deleteContactsError');\n\nexport const clearError = createAction('contacts/clearError');\n\nexport const changeFilter = createAction('contacts/filter');\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\nimport authReducer from './auth/auth-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV !== 'production',\n});\n\nconst persistor = persistStore(store);\n\nconst storWithPersist = { store, persistor };\n\nexport default storWithPersist;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { authSelectors } from '../../redux/auth';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nconst Navigation = ({ isAuthenticated }) => (\n  <nav>\n    <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\n      Главная\n    </NavLink>\n    {isAuthenticated && (\n      <NavLink\n        to=\"/contacts\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Телефонная книга\n      </NavLink>\n    )}\n  </nav>\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps, null)(Navigation);\n","export default __webpack_public_path__ + \"static/media/default-avatar.f0e39fd7.jpg\";","import React from 'react';\nimport { Avatar, Button } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\nimport defaultAvatar from './default-avatar.jpg';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  avatar: {\n    marginRight: 4,\n  },\n  name: {\n    fontWeight: 700,\n    marginRight: 12,\n  },\n};\n\nconst UserMenu = ({ avatar, name, onLogout }) => (\n  <div style={styles.container}>\n    <Avatar alt=\"Remy Sharp\" src={avatar} />\n    {/* <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} /> */}\n    <span style={styles.name}>Welcome, {name}</span>\n    <Button variant=\"contained\" color=\"secondary\" onClick={onLogout}>\n      LogOut{' '}\n    </Button>\n  </div>\n);\n\nconst mapStateToProps = state => ({\n  name: authSelectors.getUsername(state),\n  avatar: defaultAvatar,\n});\n\nconst mapDispatchToProps = {\n  onLogout: authOperations.logOut,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nconst AuthNav = () => (\n  <div>\n    <NavLink\n      to=\"/register\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Регистрация\n    </NavLink>\n    <NavLink\n      to=\"/login\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Логин\n    </NavLink>\n  </div>\n);\n\nexport default AuthNav;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../../redux/auth';\nimport Navigation from '../Navigation';\nimport UserMenu from '../UserMenu';\nimport AuthNav from '../AuthNav';\n\nconst styles = {\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderBottom: '1px solid #2A363B',\n  },\n};\n\nconst AppBar = ({ isAuthenticated }) => (\n  <header style={styles.header}>\n    <Navigation />\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\n  </header>\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps, null)(AppBar);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../redux/auth';\n\n/**\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\n * - В противном случае рендерит Redirect на /login\n */\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../redux/auth';\n\n/**\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\n * - В противном случае рендерит компонент\n */\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import React, { Component, Suspense, lazy } from 'react';\nimport { connect } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\n// import { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport './App.css';\nimport AppBar from '../AppBar';\nimport { authOperations } from '../../redux/auth';\nimport PrivateRoute from '../PrivateRoute';\nimport PublicRoute from '../PublicRoute';\n\nconst HomePage = lazy(() =>\n  import('../../views/HomePage' /* webpackChunkName: \"home-page\" */),\n);\nconst RegisterPage = lazy(() =>\n  import('../../views/RegisterPage' /* webpackChunkName: \"register-page\" */),\n);\nconst LoginPage = lazy(() =>\n  import('../../views/LoginPage' /* webpackChunkName: \"login-page\" */),\n);\nconst PhoneBookPage = lazy(() =>\n  import('../../views/PhoneBookPage' /* webpackChunkName: \"phonebook-page\" */),\n);\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n\n  render() {\n    return (\n      <>\n        <AppBar />\n        <Suspense\n          fallback={\n            <Loader type=\"Rings\" color=\"#00BFFF\" height={200} width={200} />\n          }\n        >\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <PublicRoute\n              path=\"/register\"\n              restricted\n              redirectTo=\"/contacts\"\n              component={RegisterPage}\n            />\n            <PublicRoute\n              path=\"/login\"\n              restricted\n              redirectTo=\"/contacts\"\n              component={LoginPage}\n            />\n            <PrivateRoute\n              path=\"/contacts\"\n              redirectTo=\"/login\"\n              component={PhoneBookPage}\n            />\n          </Switch>\n        </Suspense>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport './index.css';\nimport App from 'components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n      <ToastContainer position=\"top-right\" />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import axios from 'axios';\nimport authActions from './auth-actions';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com/';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = credentials => async dispatch => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const response = await axios.post('/users/signup', credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\nconst logIn = credentials => async dispatch => {\n  dispatch(authActions.loginRequest());\n\n  try {\n    const response = await axios.post('/users/login', credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\nconst logOut = () => async dispatch => {\n  dispatch(authActions.logoutRequest());\n\n  try {\n    await axios.post('/users/logout');\n\n    token.unset();\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const persistedToken = getState().auth.token;\n\n  if (!persistedToken) {\n    console.log('No token');\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const response = await axios.get('/users/current');\n\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n\nconst authOperations = {\n  register,\n  logOut,\n  logIn,\n  getCurrentUser,\n};\n\nexport default authOperations;\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\nconst getUsername = state => state.auth.user.name;\n\nconst authSelectors = { getIsAuthenticated, getUsername };\n\nexport default authSelectors;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport authActions from './auth-actions';\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n  [authActions.registerError]: setError,\n  [authActions.loginError]: setError,\n  [authActions.logoutError]: setError,\n  [authActions.getCurrentUserError]: setError,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [authActions.registerSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.getCurrentUserSuccess]: () => true,\n  [authActions.registerError]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n  [authActions.logoutSuccess]: () => false,\n});\n\nconst authReducer = combineReducers({\n  user,\n  isAuthenticated,\n  token,\n  error,\n});\nexport default authReducer;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  addContactsRequest,\n  addContactsSuccess,\n  addContactsError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  deleteContactsRequest,\n  deleteContactsSuccess,\n  deleteContactsError,\n  changeFilter,\n  clearError,\n} from './contacts-action';\n\nconst contacts = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactsSuccess]: (state, action) => [action.payload, ...state],\n  [deleteContactsSuccess]: (state, action) =>\n    state.filter(({ id }) => id !== action.payload),\n});\n\nconst loading = createReducer(false, {\n  [addContactsRequest]: () => true,\n  [addContactsSuccess]: () => false,\n  [addContactsError]: () => false,\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [deleteContactsRequest]: () => true,\n  [deleteContactsSuccess]: () => false,\n  [deleteContactsError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, action) => action.payload,\n});\n\nconst error = createReducer(null, {\n  [addContactsError]: (_, { payload }) => payload,\n  [fetchContactsError]: (_, { payload }) => payload,\n  [deleteContactsError]: (_, { payload }) => payload,\n  [clearError]: () => null,\n});\nconst contactsReducer = combineReducers({\n  contacts,\n  filter,\n  loading,\n  error,\n});\nexport default contactsReducer;\n","import { createAction } from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nconst authAction = {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n\nexport default authAction;\n"],"sourceRoot":""}