{"version":3,"sources":["views/RegisterPage/RegisterPage.js"],"names":["RegisterView","state","name","email","password","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onRegister","this","Container","maxWidth","autoComplete","onClick","Box","display","m","FormLabel","width","Input","color","type","onChange","Button","variant","Component","mapDispatchToProps","authOperations","register","connect"],"mappings":"qTAOMA,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,I,EAGZC,aAAe,YAAkC,IAAD,IAA9BC,OAAUJ,EAAoB,EAApBA,KAAMK,EAAc,EAAdA,MAChC,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAAAC,GACbA,EAAEC,iBAEF,EAAKC,MAAMC,WAAW,EAAKZ,OAE3B,EAAKO,SAAS,CAAEN,KAAM,GAAIC,MAAO,GAAIC,SAAU,M,uDAGvC,IAAD,EAC2BU,KAAKb,MAA/BC,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,SAErB,OACE,eAACW,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,qJAEA,uBAAMC,aAAa,MAAMC,QAASJ,KAAKL,aAAvC,UACE,eAACU,EAAA,EAAD,CAAKC,QAAQ,OAAb,UACE,cAACD,EAAA,EAAD,CAAKE,EAAG,EAAR,SACE,cAACC,EAAA,EAAD,mCAEF,cAACH,EAAA,EAAD,CAAKI,MAAM,MAAX,SACE,cAACC,EAAA,EAAD,CACEC,MAAM,YACNC,KAAK,OACLxB,KAAK,OACLK,MAAOL,EACPyB,SAAUb,KAAKT,iBAGnB,cAACc,EAAA,EAAD,CAAKE,EAAG,EAAR,SACE,cAACC,EAAA,EAAD,+CAEF,cAACH,EAAA,EAAD,CAAKI,MAAM,MAAX,SACE,cAACC,EAAA,EAAD,CACEC,MAAM,YACNC,KAAK,QACLxB,KAAK,QACLK,MAAOJ,EACPwB,SAAUb,KAAKT,iBAGnB,cAACc,EAAA,EAAD,CAAKE,EAAG,EAAR,SACE,cAACC,EAAA,EAAD,qDAEF,cAACH,EAAA,EAAD,CAAKI,MAAM,MAAX,SACE,cAACC,EAAA,EAAD,CACEC,MAAM,YACNC,KAAK,WACLxB,KAAK,WACLK,MAAOH,EACPuB,SAAUb,KAAKT,oBAIrB,cAACc,EAAA,EAAD,CAAKE,EAAG,EAAR,SACE,cAACO,EAAA,EAAD,CAAQF,KAAK,SAASG,QAAQ,YAAYJ,MAAM,YAAhD,sI,GAlEeK,aA4ErBC,EAAqB,CACzBlB,WAAYmB,IAAeC,UAGdC,cAAQ,KAAMH,EAAdG,CAAkClC","file":"static/js/register-page.173ad691.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Input, Box, FormLabel, Container } from '@material-ui/core';\n\nimport { connect } from 'react-redux';\n\nimport { authOperations } from '../../redux/auth';\n\nclass RegisterView extends Component {\n  state = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onRegister(this.state);\n\n    this.setState({ name: '', email: '', password: '' });\n  };\n\n  render() {\n    const { name, email, password } = this.state;\n\n    return (\n      <Container maxWidth=\"sm\">\n        <h1>Страница регистрации</h1>\n\n        <form autoComplete=\"off\" onClick={this.handleSubmit}>\n          <Box display=\"flex\">\n            <Box m={1}>\n              <FormLabel>Имя</FormLabel>\n            </Box>\n            <Box width=\"400\">\n              <Input\n                color=\"secondary\"\n                type=\"text\"\n                name=\"name\"\n                value={name}\n                onChange={this.handleChange}\n              />\n            </Box>\n            <Box m={1}>\n              <FormLabel>Почта</FormLabel>\n            </Box>\n            <Box width=\"400\">\n              <Input\n                color=\"secondary\"\n                type=\"email\"\n                name=\"email\"\n                value={email}\n                onChange={this.handleChange}\n              />\n            </Box>\n            <Box m={1}>\n              <FormLabel>Пароль</FormLabel>\n            </Box>\n            <Box width=\"400\">\n              <Input\n                color=\"secondary\"\n                type=\"password\"\n                name=\"password\"\n                value={password}\n                onChange={this.handleChange}\n              />\n            </Box>\n          </Box>\n          <Box m={1}>\n            <Button type=\"submit\" variant=\"contained\" color=\"secondary\">\n              Зарегистрироваться\n            </Button>\n          </Box>\n        </form>\n      </Container>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onRegister: authOperations.register,\n};\n\nexport default connect(null, mapDispatchToProps)(RegisterView);\n"],"sourceRoot":""}